{"version":3,"sources":["ui/Main/Registration/Registration.module.css","ui/Main/Authorization/Authorization.module.css","ui/common/SuperInputText/SuperInputText.module.css","ui/Main/PasswordRecover/PasswordRecover.module.css","ui/common/Alert/Alert.module.css","ui/common/SuperCheckbox/SuperCheckbox.module.css","ui/Header/Header.module.css","ui/common/SuperButton/SuperButton.module.css","ui/common/AuthContainer/AuthContainer.module.css","ui/common/SuperButtonLink/SuperButtonLink.module.css","ui/common/Title/Title.module.css","ui/common/Preloader/Preloader.module.css","ui/Main/Main.tsx","ui/common/SuperInputText/SuperInputText.tsx","ui/common/SuperButton/SuperButton.tsx","ui/common/AuthContainer/AuthContainer.tsx","ui/common/SuperCheckbox/SuperCheckbox.tsx","dal/api/api.ts","bll/actions.ts","bll/thunks.ts","ui/common/SuperButtonLink/SuperButtonLink.tsx","ui/Main/Authorization/Authorization.tsx","ui/common/Title/Title.tsx","ui/common/Preloader/Preloader.tsx","ui/Main/Registration/Registration.tsx","ui/Main/Profile/Profile.tsx","ui/Main/PasswordRecover/PasswordRecover.tsx","ui/Main/EnterNewPassword/EnterNewPassword.tsx","ui/Main/PageNotFound/PageNotFound.tsx","ui/Main/Test/Test.tsx","ui/Routes.tsx","ui/Header/Header.tsx","ui/common/Alert/Alert.tsx","ui/App.tsx","reportWebVitals.ts","bll/appReducer.ts","bll/authReducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","Main","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","errorInput","label","type","e","currentTarget","value","key","superLabel","SuperButton","red","finalClassName","default","AuthContainer","children","style","container","SuperCheckbox","onChangeChecked","checkbox","checked","instance","axios","create","withCredentials","baseURL","authAPI","email","password","rememberMe","post","then","res","data","from","message","authActions","isLoggedIn","bool","appActions","isShowing","isError","payload","authThunks","dispatch","a","result","status","addedUser","name","console","log","response","info","SuperButtonLink","to","link","Authorization","useDispatch","useSelector","state","auth","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","PATH","PROFILE","body","handleSubmit","input","placeholder","touched","getFieldProps","btn","links","REG","PASSWORD_RECOVER","Title","title","Preloader","preloader","Registration","isFetching","validatePassword","length","wrapper","marginTop","AUTH","Profile","PasswordRecover","messageRecoverPass","textAlign","EnterNewPassword","PageNotFound","Test","MAIN","ENTER_NEW_PASSWORD","COMPONENTS","Routes","exact","path","render","Header","header","nav","Alert","useState","timeoutID","setTimeoutID","useEffect","id","window","setTimeout","clearTimeout","messageStyle","alert","onClick","progressbar","animationDuration","trim","toUpperCase","slice","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","appReducer","action","authReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.a8649506.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Registration_title__1NsKw\",\"body\":\"Registration_body__RnXeR\",\"input\":\"Registration_input__1GuqE\",\"btn\":\"Registration_btn__Z2d8y\",\"link\":\"Registration_link__1za6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Authorization_body__3owUL\",\"input\":\"Authorization_input__1iE5C\",\"btn\":\"Authorization_btn__3POwZ\",\"links\":\"Authorization_links__-RB7d\",\"link\":\"Authorization_link__3dPRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2deP6\",\"errorInput\":\"SuperInputText_errorInput__3df2n\",\"superLabel\":\"SuperInputText_superLabel__OtLeJ\",\"error\":\"SuperInputText_error__2a8I_\",\"label\":\"SuperInputText_label__uQe4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PasswordRecover_title__16Akc\",\"body\":\"PasswordRecover_body__3oiTq\",\"input\":\"PasswordRecover_input__1VoGy\",\"btn\":\"PasswordRecover_btn__3GWDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__3zAuW\",\"error\":\"Alert_error__NGW7a\",\"progressbar\":\"Alert_progressbar__hF1dQ\",\"animate\":\"Alert_animate__1gUSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__pLkNv\",\"spanClassName\":\"SuperCheckbox_spanClassName__1iGKy\",\"label\":\"SuperCheckbox_label__1HmxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__oeUPN\",\"nav\":\"Header_nav__3BJI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Wh5N\",\"red\":\"SuperButton_red__2QOK8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthContainer_container__pwQKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"SuperButtonLink_link__3ScIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3BoSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1jW8V\"};","import React from \"react\";\r\n\r\nconst Main:React.FC = () => {\r\n    return (\r\n        <div>Main</div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error ? s.error : \"\"} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : \"\"} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\r\n    return (\r\n        <>\r\n            <label className={s.label}>\r\n                <input\r\n                    type={\"text\"}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n                {error && <span className={`${s.superLabel} ${finalSpanClassName}`}>{error}</span>}\r\n            </label>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : \"\"} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={`${s.default} ${finalClassName}`}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport s from './AuthContainer.module.css'\r\n\r\ntype PropsType = {\r\n    className?: string\r\n    style?: {\r\n        [key:string]: string\r\n    }\r\n}\r\n\r\nconst AuthContainer:React.FC<PropsType> = ({children, className, style}) => {\r\n    return (\r\n        <div className={`${s.container} ${className}`} style={style}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthContainer","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n})\r\n\r\nconst messageRequestForPass = \"<div style='background-color: #508cff; padding: 15px; color: black'>\" +\r\n    \"If you want to recover your password: \" +\r\n    \"<a style='color: white' href='http://localhost:3000/friday#/friday/new-password/$token$'>Click here</a></div>\"\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginAPIType>(`auth/login`, {email, password, rememberMe})\r\n            .then(res => res.data)\r\n    },\r\n    registration(data:any) {\r\n        return instance.post<RegistrationData>('auth/register', data)\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<ForgotPassAPIType>(`auth/forgot`, {email, from: 'test-front-admin', message: messageRequestForPass})\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\ntype LoginAPIType = {\r\n    \"_id\": string\r\n    \"email\": string\r\n    \"rememberMe\": boolean\r\n    \"name\": string\r\n    \"publicCardPacksCount\": number\r\n    \"avatar\"?: string\r\n}\r\n\r\ntype RegistrationData = {\r\n    addedUser: {\r\n        name: string\r\n    }\r\n}\r\n\r\ntype ForgotPassAPIType = {\r\n    \"info\": string\r\n}","export const authActions = {\r\n    setIsLoggedIn: (isLoggedIn: boolean) => ({type: 'SET_IS_LOGGED_IN', isLoggedIn} as const),\r\n    setFetching: (bool:boolean) => ({type: 'SET_FETCHING', bool} as const),\r\n    setMessageRecoverPass: (message: string) => ({type: 'SET_MESSAGE_RECOVER_PASS', message} as const),\r\n}\r\n\r\nexport const appActions = {\r\n    setMessageState: (isShowing:boolean, message:string, isError:boolean) => (\r\n        {type: 'SET_MESSAGE_STATE', payload: {isShowing, message, isError}} as const\r\n    ),\r\n}\r\n\r\n","import {Dispatch} from 'redux'\r\nimport {authAPI} from '../dal/api/api'\r\nimport {appActions, authActions} from './actions'\r\nimport {RegistrationDataType} from '../utils/types/registration-types'\r\n\r\nexport const authThunks = {\r\n    setRegistrationData: (data: RegistrationDataType) => async (dispatch: Dispatch) => {\r\n        dispatch(authActions.setFetching(true))\r\n        try {\r\n            const result = await authAPI.registration(data)\r\n            if (result.status === 201) {\r\n                dispatch(appActions.setMessageState(true, `${result.data.addedUser.name} registered successfully`, false))\r\n            }\r\n            console.log(result)\r\n        } catch (e) {\r\n            dispatch(appActions.setMessageState(true, `${e.response.data.error}`, true))\r\n        } finally {\r\n            dispatch(authActions.setFetching(false))\r\n        }\r\n    },\r\n    login: (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch) => {\r\n        try {\r\n            const result = await authAPI.login(email, password, rememberMe)\r\n            dispatch(authActions.setIsLoggedIn(true))\r\n            console.log(result)\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : e.message\r\n            console.log(error)\r\n        }\r\n    },\r\n    recoverPassword: (email: string) => async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(authActions.setFetching(true))\r\n            const result = await authAPI.forgotPassword(email)\r\n            dispatch(authActions.setMessageRecoverPass(result.info))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : e.message\r\n            console.log(error)\r\n        } finally {\r\n            dispatch(authActions.setFetching(false))\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport s from './SuperButtonLink.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n    to: string,\r\n    className?: string\r\n    style?: {\r\n        [key: string]: string\r\n    }\r\n}\r\nconst SuperButtonLink: React.FC<PropsType> = (\r\n    {\r\n        to,\r\n        children,\r\n        className,\r\n        style\r\n    }) => {\r\n    return (\r\n        <NavLink to={to} className={`${s.link} ${className}`}>{children}</NavLink>\r\n    )\r\n}\r\n\r\n\r\nexport default SuperButtonLink","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport s from './Authorization.module.css'\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../common/SuperButton/SuperButton'\r\nimport AuthContainer from '../../common/AuthContainer/AuthContainer'\r\nimport Title from '../../common/Title/Title'\r\nimport SuperCheckbox from '../../common/SuperCheckbox/SuperCheckbox'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {authThunks} from '../../../bll/thunks'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport { PATH } from '../../Routes'\r\nimport { Redirect } from 'react-router-dom'\r\nimport SuperButtonLink from '../../common/SuperButtonLink/SuperButtonLink'\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    validatePassword?: string\r\n}\r\n\r\nconst Authorization: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            }\r\n\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            let {email, password, rememberMe} = values\r\n            dispatch(authThunks.login(email, password, rememberMe))\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthContainer className={s.container}>\r\n                <div className={s.body}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <SuperInputText className={s.input}\r\n                                        type=\"email\"\r\n                                        placeholder=\"email\"\r\n                                        error={formik.touched.email && formik.errors.email ? formik.errors.email : null}\r\n                                        {...formik.getFieldProps('email')} />\r\n                        <SuperInputText className={s.input}\r\n                                        type=\"password\"\r\n                                        placeholder=\"password\"\r\n                                        error={formik.touched.password && formik.errors.password ? formik.errors.password : null}\r\n                                        {...formik.getFieldProps('password')} />\r\n                        <SuperCheckbox {...formik.getFieldProps('rememberMe')}>\r\n                            Remember me\r\n                        </SuperCheckbox>\r\n                        <SuperButton className={s.btn} type=\"submit\">Sign in</SuperButton>\r\n                    </form>\r\n                    <div className={s.links}>\r\n                        <SuperButtonLink to={PATH.REG} className={s.link}>Sign up</SuperButtonLink>\r\n                        <SuperButtonLink to={PATH.PASSWORD_RECOVER} className={s.link}>Forgot password?</SuperButtonLink>\r\n                    </div>\r\n                </div>\r\n            </AuthContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authorization","import React from 'react'\r\nimport s from './Title.module.css'\r\n\r\ntype PropsType = {\r\n    value: string\r\n    className?: string\r\n    style?: {\r\n        [key: string]: string\r\n    }\r\n}\r\n\r\nconst Title:React.FC<PropsType> = ({value, className, style}) => {\r\n    return (\r\n        <div className={`${s.title} ${className}`} style={style}>{value}</div>\r\n    )\r\n}\r\n\r\nexport default Title","import React from 'react'\r\nimport s from './Preloader.module.css'\r\n\r\ntype PropsType = {\r\n    className?: string\r\n    style?: {\r\n        [key: string]: string\r\n    }\r\n}\r\nconst Preloader:React.FC<PropsType> = ({className, style}) => {\r\n    return (\r\n        <div className={`${s.preloader} ${className}`} style={style}></div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from 'react'\r\nimport Title from '../../common/Title/Title'\r\nimport s from './Registration.module.css'\r\nimport AuthContainer from '../../common/AuthContainer/AuthContainer'\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../common/SuperButton/SuperButton'\r\nimport {useFormik} from 'formik'\r\nimport {authThunks} from '../../../bll/thunks'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport {RegistrationDataType} from '../../../utils/types/registration-types';\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuperButtonLink from '../../common/SuperButtonLink/SuperButtonLink';\r\nimport {PATH} from '../../Routes';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    validatePassword?: string\r\n}\r\n\r\n\r\nconst Registration:React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isFetching = useSelector<AppStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            validatePassword: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'required field';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'required field';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'must be more than 7 characters';\r\n            }\r\n\r\n            if (!values.validatePassword) {\r\n                errors.validatePassword = 'required field';\r\n            } else if (values.password !== values.validatePassword) {\r\n                errors.validatePassword = 'passwords are different';\r\n                errors.password = 'passwords are different';\r\n            } else if (values.validatePassword.length < 8) {\r\n                errors.validatePassword = 'must be more than 7 characters';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const data:RegistrationDataType = {\r\n                email: values.email,\r\n                password: values.password,\r\n            }\r\n            dispatch(authThunks.setRegistrationData(data))\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <AuthContainer className={s.container}>\r\n                <Title value=\"Registration\" className={s.title}/>\r\n                <div className={s.body}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <SuperInputText className={s.input}\r\n                                        type=\"email\"\r\n                                        placeholder=\"email\"\r\n                                        error={formik.touched.email && formik.errors.email ? formik.errors.email : null}\r\n                                        {...formik.getFieldProps(\"email\")} />\r\n\r\n                        <SuperInputText className={s.input}\r\n                                        type=\"password\"\r\n                                        placeholder=\"password\"\r\n                                        error={formik.touched.password && formik.errors.password ? formik.errors.password : null}\r\n                                        {...formik.getFieldProps(\"password\")} />\r\n\r\n                        <SuperInputText className={s.input}\r\n                                        type=\"password\"\r\n                                        placeholder=\"repeat password\"\r\n                                        error={formik.touched.validatePassword && formik.errors.validatePassword ? formik.errors.validatePassword : null}\r\n                                        {...formik.getFieldProps(\"validatePassword\")} />\r\n\r\n                        {isFetching\r\n                            ? <Preloader style={{marginTop: \"20px\"}}/>\r\n                            : <SuperButton className={s.btn}>Sign up</SuperButton>\r\n                        }\r\n                        <SuperButtonLink to={PATH.AUTH} className={s.link}>Sign in</SuperButtonLink>\r\n                    </form>\r\n                </div>\r\n            </AuthContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration","import React from \"react\";\r\n\r\nconst Profile:React.FC = () => {\r\n    return (\r\n        <div>Profile</div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useFormik} from 'formik'\r\nimport AuthContainer from '../../common/AuthContainer/AuthContainer'\r\nimport s from './PasswordRecover.module.css'\r\nimport Title from '../../common/Title/Title'\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../common/SuperButton/SuperButton'\r\nimport {authThunks} from '../../../bll/thunks'\r\nimport {AppStateType} from '../../../bll/store'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nconst PasswordRecover: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const messageRecoverPass = useSelector<AppStateType, string | null>(state => state.auth.messageRecoverPass)\r\n    const isFetching = useSelector<AppStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(authThunks.recoverPassword(values.email))\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <AuthContainer className={s.container}>\r\n                <Title value=\"Recover password\" className={s.title}/>\r\n                <div className={s.body}>\r\n                    {messageRecoverPass\r\n                        ? <div style={{textAlign: 'center'}}>\r\n                            <div>{messageRecoverPass}</div>\r\n                            <div>Check your email :)</div>\r\n                        </div>\r\n\r\n                        : <form onSubmit={formik.handleSubmit}>\r\n                            <SuperInputText className={s.input}\r\n                                            type=\"email\"\r\n                                            placeholder=\"email\"\r\n                                            error={formik.touched.email && formik.errors.email ? formik.errors.email : null}\r\n                                            {...formik.getFieldProps('email')} />\r\n                            {isFetching\r\n                                ? <Preloader style={{marginTop: '10px'}}/>\r\n                                : < SuperButton className={s.btn} type='submit'>Recover</SuperButton>\r\n                            }\r\n                        </form>\r\n                    }\r\n                </div>\r\n            </AuthContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordRecover","import React from \"react\";\r\n\r\nconst EnterNewPassword:React.FC = () => {\r\n    return (\r\n        <div>Enter New Password</div>\r\n    )\r\n}\r\n\r\nexport default EnterNewPassword;","import React from \"react\";\r\n\r\nconst PageNotFound:React.FC = () => {\r\n    return (\r\n        <div>Page Not Found</div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;","import React from \"react\";\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\r\nimport Title from \"../../common/Title/Title\";\r\nimport AuthContainer from \"../../common/AuthContainer/AuthContainer\";\r\n\r\nconst Test: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText placeholder=\"test\"/>\r\n            <hr/>\r\n            <SuperButton>test</SuperButton>\r\n            <hr/>\r\n            <SuperCheckbox>test</SuperCheckbox>\r\n            <hr/>\r\n            <Title value=\"Title\"/>\r\n            <hr/>\r\n            <AuthContainer>auth container(login, registration, refresh password)</AuthContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test;","import {Route, Switch} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Main from \"./Main/Main\";\r\nimport Authorization from \"./Main/Authorization/Authorization\";\r\nimport Registration from \"./Main/Registration/Registration\";\r\nimport Profile from \"./Main/Profile/Profile\";\r\nimport PasswordRecover from \"./Main/PasswordRecover/PasswordRecover\";\r\nimport EnterNewPassword from \"./Main/EnterNewPassword/EnterNewPassword\";\r\nimport PageNotFound from \"./Main/PageNotFound/PageNotFound\";\r\nimport Test from \"./Main/Test/Test\";\r\n\r\nexport const PATH = {\r\n    AUTH: \"/authorization\",\r\n    REG: \"/registration\",\r\n    MAIN: \"/main\",\r\n    PROFILE: \"/profile\",\r\n    PASSWORD_RECOVER: \"/recover\",\r\n    ENTER_NEW_PASSWORD: \"/new-password\",\r\n    COMPONENTS: \"/test\",\r\n}\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => <Main/>}/>\r\n            <Route exact path={PATH.MAIN} render={() => <Main/>}/>\r\n            <Route path={PATH.AUTH} render={() => <Authorization/>}/>\r\n            <Route path={PATH.REG} render={() => <Registration/>}/>\r\n            <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n            <Route path={PATH.PASSWORD_RECOVER} render={() => <PasswordRecover/>}/>\r\n            <Route path={PATH.ENTER_NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\r\n            <Route path={PATH.COMPONENTS} render={() => <Test/>}/>\r\n            <Route render={() => <PageNotFound/>}/>\r\n            <Route/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { PATH } from \"../Routes\";\r\n\r\nconst Header:React.FC = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <nav className={s.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to={PATH.MAIN}>Main</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.AUTH}>Authorization</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.REG}>Registration</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.PASSWORD_RECOVER}>Password recover</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.ENTER_NEW_PASSWORD}>Enter new password</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.COMPONENTS}>Test</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useEffect, useState} from 'react'\r\nimport s from './Alert.module.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport {appActions} from '../../../bll/actions';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    error: boolean\r\n}\r\n\r\nconst Alert:React.FC<PropsType> = ({message, error}) => {\r\n    const dispatch = useDispatch()\r\n    const [timeoutID, setTimeoutID] = useState<number>(0)\r\n    const progressDuration = 3000\r\n\r\n    useEffect(() => {\r\n        const id:number = window.setTimeout(() => {\r\n            dispatch(appActions.setMessageState(false, \"\", false))\r\n        }, progressDuration)\r\n        setTimeoutID(id)\r\n        return clearTimeout(timeoutID)\r\n    },[])\r\n\r\n    const handler = () => {\r\n        dispatch(appActions.setMessageState(false, \"\", false))\r\n    }\r\n    const messageStyle = error ? `${s.alert} ${s.error}` : s.alert\r\n\r\n    return (\r\n        <div className={messageStyle} onClick={handler}>\r\n            <div className={s.progressbar} style={{animationDuration: `${progressDuration}ms`}}></div>\r\n            <span>{`${message.trim()[0].toUpperCase()}${message.slice(1)}`}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Header/Header\";\r\nimport Routes from \"./Routes\";\r\nimport {AppStateType} from \"../bll/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Alert from './common/Alert/Alert';\r\nimport {InitialStateType} from '../bll/appReducer';\r\n\r\nfunction App() {\r\n    const app = useSelector<AppStateType, InitialStateType>(state => state.app)\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n            {app.isShowing && <Alert message={app.message} error={app.isError}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AppActionsType} from './store';\r\nimport {appActions} from './actions';\r\n\r\nconst initialState = {\r\n    isShowing: false,\r\n    message: \"\",\r\n    isError: false,\r\n}\r\n\r\ntype ActionsType = AppActionsType<typeof appActions>\r\nexport type InitialStateType = typeof initialState\r\n\r\n//@ts-ignore\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_MESSAGE_STATE': {\r\n            return {...state, ...action.payload}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default appReducer;","import { authActions } from \"./actions\"\r\nimport {AppActionsType} from './store'\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    messageRecoverPass: null as string | null\r\n}\r\n\r\ntype ActionsType = AppActionsType<typeof authActions>\r\ntype InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_IS_LOGGED_IN': {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case 'SET_FETCHING': {\r\n            return {...state, isFetching: action.bool}\r\n        }\r\n        case 'SET_MESSAGE_RECOVER_PASS': {\r\n            return {...state, messageRecoverPass: action.message}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type AppActionsType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {store} from './bll/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter basename=\"/friday\">\r\n          <Provider store={store}>\r\n              <App />\r\n          </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}